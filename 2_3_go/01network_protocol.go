package main

func main() {
	// 网络协议
	//协议：一组规则，要求使用协议的双方，必须严格遵守协议内容。

	//网络分层结构
	//OSI七层模型结构，物，数，网，传，会，表，应。物理层，数据链路层，网络层，传输层，会话层，表现层，应用层。
	//TCP/IP 四层分层结构，数，网，传，应。链路层，网络层，传输层，应用层。

	//代表协议：
	/**
	链路层： ARP，RARP，硬件接口
	网络层：IP，ICMP，IGMP
	传输层：TCP，UDP
	应用层：FTP，Telent，TFIP，NFS，HTTP
	*/

	//各层功能：
	/**
	链路层，设备与设备
	网络层，主机与主机
	传输层，进程与进程
	应用层，应用程序与应用程序

	数据链路层
	使用RAP协议作用，通过IP协议确定一个MAC地址。过程是通过硬件网卡。会先一个ARP请求包[源MAC，目标MAC[默认是000，因为不知道]，源IP，目的IP]，
	目的设备返回ARP应答包[源MAC（这里的源指的目的设备的MAC），目标MAC（请求包的源MAC），源IP（目的设备的IP），目的IP（请求包的IP）]

	网络层，使用IP协议确定一台主机。作用：直接在网络环境中唯一标识一台主机。IP地址本质是二进制数，点分十进制。

	传输层，使用端口号确定进程，TCP，UDP，作用：在一台主机上一个进程对应一个端口号

	应用层，自行解析，比如FTP，HTTP解析，或者自己创造一个新协议，作用，把拿到的数据进行解封装等，
	*/

	//除了应用层是用户层，其他的都是内核层，内核层无需过多关心，因为是现成稳定方案

	//数据通信过程：
	//	封装：应用层 -- 传输层 -- 网络层 -- 链路层
	//	解封装：链路层 -- 网络层 -- 传输层 -- 应用层
}
